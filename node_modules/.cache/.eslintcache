[{"C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\index.js":"1","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\reportWebVitals.js":"2","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\App.js":"3","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\screens\\Register.jsx":"4","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\components\\styles\\Container.js":"5"},{"size":582,"mtime":1683986940177,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1683912977090,"results":"8","hashOfConfig":"7"},{"size":334,"mtime":1684008150307,"results":"9","hashOfConfig":"7"},{"size":5338,"mtime":1684008148913,"results":"10","hashOfConfig":"7"},{"size":1580,"mtime":1684008149694,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"6q74n4",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\index.js",[],[],[],"C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\reportWebVitals.js",[],[],"C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\App.js",["31"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Register from \"./screens/Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Register />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\screens\\Register.jsx",["32","33","34","35","36"],[],"import { react } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  RegisterForm,\r\n  Regititle,\r\n  FormGroup,\r\n  TextLabel,\r\n  SubmitBtn,\r\n} from \"../components/styles/Container\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [nicknameValid, setNicknameValid] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState(\"\");\r\n  const [passwordValid, setPasswrdValid] = useState(\"\");\r\n  const [passwordDoublechek, setPasswordDoubleChek] = useState(\"\");\r\n  const [errorMail, setErrorMail] = useState(\"\");\r\n  const [errorPassword, setErrorPassword] = useState(\"\");\r\n  const [errorPasswordConfirm, setErrorPasswordConfirm] = useState(\"\");\r\n  const [errorNickname, setErrorNickname] = useState(\"\");\r\n\r\n  // 이메일 체크 함수\r\n  const handle_email = (e) => {\r\n    setEmail(e.target.value);\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 이메일 체크 정규식\r\n\r\n    if (emailRegex.test(e.target.value)) {\r\n      setEmailValid(true);\r\n      setErrorMail(\"\");\r\n      console.log(\"true\");\r\n    } else {\r\n      setEmailValid(false);\r\n      setErrorMail(\"올바른 이메일을 입력해주세요.\");\r\n      console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  // 닉네임 체크 함수\r\n  const handle_nickname = (e) => {\r\n    setNickname(e.target.value);\r\n    const nicknameRegex = /^[a-zA-Z가-힣]{3,15}$/;\r\n\r\n    if (nicknameRegex.test(e.target.value)) {\r\n      setNicknameValid(true);\r\n      setErrorNickname(\"\");\r\n    } else {\r\n      setNicknameValid(false);\r\n      setErrorNickname(\"닉네임은 3~15자로 입력해주세요.\");\r\n    }\r\n  };\r\n  // 비밀번호 체크 함수\r\n  const handle_password = (e) => {\r\n    setPassword(e.target.value);\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/; // 비밀번호 체크 정규식 (영문 숫자 포함 8자리 이상)\r\n    if (passwordRegex.test(e.target.value)) {\r\n      setPasswrdValid(true);\r\n      setErrorPassword(\"\");\r\n\r\n      // console.log(\"true\");\r\n    } else {\r\n      setPasswrdValid(false);\r\n      setErrorPassword(\"비밀번호는 영문 숫자 포함 8자리 이상이어야 합니다.\");\r\n      // console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  const password_doublecheck = (e) => {\r\n    setPasswordConfirm(e.target.value);\r\n  };\r\n\r\n  // 비밀번호 확인 함수\r\n  useEffect(() => {\r\n    if (password === passwordConfirm) {\r\n      setPasswordDoubleChek(true);\r\n      console.log(\"true\");\r\n      setErrorPasswordConfirm(\"\");\r\n    } else {\r\n      setPasswordDoubleChek(false);\r\n      setErrorPasswordConfirm(\"비밀번호가 일치하지 않습니다.\");\r\n      console.log(\"false\");\r\n    }\r\n  }, [password, passwordConfirm]);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"page  \">\r\n        <RegisterForm>\r\n          <Regititle>회원가입</Regititle>\r\n\r\n          <emailForm>\r\n            <TextLabel htmlFor=\"email\">이메일 주소</TextLabel>\r\n            <FormGroup>\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                required\r\n                value={email}\r\n                onChange={handle_email}\r\n                placeholder=\"이메일을 입력하세요.\"\r\n              />\r\n              {errorMail && <p style={{ color: \"red\" }}>{errorMail}</p>}\r\n            </FormGroup>\r\n          </emailForm>\r\n\r\n          <password_form>\r\n            <TextLabel htmlFor=\"password\">비밀번호</TextLabel>\r\n            <FormGroup>\r\n              <input\r\n                className=\"input\"\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"비밀번호를 입력하세요.\"\r\n                value={password}\r\n                onChange={handle_password}\r\n              />\r\n              {errorPassword && <p style={{ color: \"red\" }}>{errorPassword}</p>}\r\n            </FormGroup>\r\n          </password_form>\r\n\r\n          <password_confirm_form>\r\n            <TextLabel htmlFor=\"password_confirm\">비밀번호 확인</TextLabel>\r\n            <FormGroup>\r\n              <input\r\n                className=\"input\"\r\n                required\r\n                type=\"password\"\r\n                value={passwordConfirm}\r\n                onChange={password_doublecheck}\r\n              />\r\n              {errorPasswordConfirm && (\r\n                <p style={{ color: \"red\" }}>{errorPasswordConfirm}</p>\r\n              )}\r\n            </FormGroup>\r\n          </password_confirm_form>\r\n\r\n          <nickname_form>\r\n            <TextLabel htmlFor=\"password\">닉네임</TextLabel>\r\n            <FormGroup>\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                required\r\n                value={nickname}\r\n                onChange={handle_nickname}\r\n                placeholder=\"닉네임을 입력해주세요.\"\r\n              />\r\n              {errorNickname && <p style={{ color: \"red\" }}>{errorNickname}</p>}\r\n            </FormGroup>\r\n          </nickname_form>\r\n\r\n          <SubmitBtn type=\"submit\">가입완료</SubmitBtn>\r\n        </RegisterForm>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AMJ\\Desktop\\TeamProject\\newpj\\src\\components\\styles\\Container.js",["37"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%);\r\n`;\r\nexport const Regititle = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 1rem;\r\n  input {\r\n    border-top-style: none;\r\n    border-left-style: none;\r\n    border-right-style: none;\r\n    border-bottom: 2px solid black;\r\n    height: 30px;\r\n    font-size: 20px;\r\n    width: 100%;\r\n    outline: none;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const RegisterForm = styled.div`\r\n  min-width: 450px;\r\n  min-height: 650px;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const TextLabel = styled.label`\r\n  margin-bottom: 15px;\r\n  margin-top: 15px;\r\n  font-weight: bold;\r\n  color: #4b4b4b;\r\n  font-size: 20px;\r\n`;\r\nexport const SubmitBtn = styled.button`\r\n  width: 400px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  border-radius: 20px;\r\n  padding: 10px;\r\n  /* outline: none; */\r\n  border: none;\r\n  color: #4b4b4b;\r\n  background-image: linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.15) 0px 15px 22px;\r\n\r\n  &:active {\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n",{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":15},{"ruleId":"38","severity":1,"message":"43","line":20,"column":10,"nodeType":"40","messageId":"41","endLine":20,"endColumn":23},{"ruleId":"38","severity":1,"message":"44","line":21,"column":10,"nodeType":"40","messageId":"41","endLine":21,"endColumn":20},{"ruleId":"38","severity":1,"message":"45","line":22,"column":10,"nodeType":"40","messageId":"41","endLine":22,"endColumn":23},{"ruleId":"38","severity":1,"message":"46","line":23,"column":10,"nodeType":"40","messageId":"41","endLine":23,"endColumn":28},{"ruleId":"38","severity":1,"message":"47","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'nicknameValid' is assigned a value but never used.","'emailValid' is assigned a value but never used.","'passwordValid' is assigned a value but never used.","'passwordDoublechek' is assigned a value but never used.","'React' is defined but never used."]