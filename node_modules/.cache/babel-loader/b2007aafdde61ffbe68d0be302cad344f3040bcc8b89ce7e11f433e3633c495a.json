{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMJ\\\\Desktop\\\\TeamProject\\\\newpj\\\\src\\\\screens\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { react } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Container, RegisterForm, Regititle, FormGroup, TextLabel, submitBtn } from \"../components/styles/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [emailvalid, setEmailValid] = useState(false);\n  const [passwordvalid, setPasswrdValid] = useState(false);\n  const [passwordDoublechek, setPasswordDoubleChek] = useState(false);\n\n  // 이메일 체크 함수\n  const handle_email = e => {\n    setEmail(e.target.value);\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 이메일 체크 정규식\n\n    if (emailRegex.test(e.target.value)) {\n      setEmailValid(true);\n      console.log(\"true\");\n    } else {\n      setEmailValid(false);\n      console.log(\"false\");\n    }\n  };\n\n  // 비밀번호 체크 함수\n  const handle_password = e => {\n    setPassword(e.target.value);\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/; // 비밀번호 체크 정규식 (영문 숫자 포함 8자리 이상)\n    if (passwordRegex.test(e.target.value)) {\n      setPasswrdValid(true);\n      // console.log(\"true\");\n    } else {\n      setPasswrdValid(false);\n      // console.log(\"false\");\n    }\n  };\n\n  const password_doublecheck = e => {\n    setPasswordConfirm(e.target.value);\n  };\n\n  // 비밀번호 확인 함수\n  useEffect(() => {\n    if (password === passwordConfirm) {\n      setPasswordDoubleChek(true);\n      console.log(\"true\");\n    } else {\n      setPasswordDoubleChek(false);\n      console.log(\"false\");\n    }\n  }, [password, passwordConfirm]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"page  \",\n    children: /*#__PURE__*/_jsxDEV(RegisterForm, {\n      children: [/*#__PURE__*/_jsxDEV(Regititle, {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"emailForm\", {\n        children: [/*#__PURE__*/_jsxDEV(TextLabel, {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            required: true,\n            value: email,\n            onChange: handle_email,\n            placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"password_form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextLabel, {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            required: true,\n            type: \"password\",\n            value: password,\n            onChange: handle_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"password_confirm_form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextLabel, {\n          htmlFor: \"password_confirm\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            required: true,\n            type: \"password\",\n            value: passwordConfirm,\n            onChange: password_doublecheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nickname_form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextLabel, {\n          htmlFor: \"password\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            required: true,\n            value: nickname,\n            onChange: e => setNickname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"submitBtn\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"\\uAC00\\uC785\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"ZgeN2KkL1WJ8NE9wxZK3/JBfsWU=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["react","useState","useEffect","Container","RegisterForm","Regititle","FormGroup","TextLabel","submitBtn","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","nickname","setNickname","emailvalid","setEmailValid","passwordvalid","setPasswrdValid","passwordDoublechek","setPasswordDoubleChek","handle_email","e","target","value","emailRegex","test","console","log","handle_password","passwordRegex","password_doublecheck","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","required","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/AMJ/Desktop/TeamProject/newpj/src/screens/Register.jsx"],"sourcesContent":["import { react } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  RegisterForm,\r\n  Regititle,\r\n  FormGroup,\r\n  TextLabel,\r\n  submitBtn,\r\n} from \"../components/styles/Container\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [emailvalid, setEmailValid] = useState(false);\r\n  const [passwordvalid, setPasswrdValid] = useState(false);\r\n  const [passwordDoublechek, setPasswordDoubleChek] = useState(false);\r\n\r\n  // 이메일 체크 함수\r\n  const handle_email = (e) => {\r\n    setEmail(e.target.value);\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; // 이메일 체크 정규식\r\n\r\n    if (emailRegex.test(e.target.value)) {\r\n      setEmailValid(true);\r\n      console.log(\"true\");\r\n    } else {\r\n      setEmailValid(false);\r\n      console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  // 비밀번호 체크 함수\r\n  const handle_password = (e) => {\r\n    setPassword(e.target.value);\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/; // 비밀번호 체크 정규식 (영문 숫자 포함 8자리 이상)\r\n    if (passwordRegex.test(e.target.value)) {\r\n      setPasswrdValid(true);\r\n      // console.log(\"true\");\r\n    } else {\r\n      setPasswrdValid(false);\r\n      // console.log(\"false\");\r\n    }\r\n  };\r\n\r\n  const password_doublecheck = (e) => {\r\n    setPasswordConfirm(e.target.value);\r\n  };\r\n\r\n  // 비밀번호 확인 함수\r\n  useEffect(() => {\r\n    if (password === passwordConfirm) {\r\n      setPasswordDoubleChek(true);\r\n      console.log(\"true\");\r\n    } else {\r\n      setPasswordDoubleChek(false);\r\n      console.log(\"false\");\r\n    }\r\n  }, [password, passwordConfirm]);\r\n\r\n  return (\r\n    <Container className=\"page  \">\r\n      <RegisterForm>\r\n        <Regititle>회원가입</Regititle>\r\n\r\n        <emailForm>\r\n          <TextLabel htmlFor=\"email\">이메일 주소</TextLabel>\r\n          <FormGroup>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              required\r\n              value={email}\r\n              onChange={handle_email}\r\n              placeholder=\"이메일을 입력하세요.\"\r\n            />\r\n          </FormGroup>\r\n        </emailForm>\r\n\r\n        <password_form>\r\n          <TextLabel htmlFor=\"password\">비밀번호</TextLabel>\r\n          <FormGroup>\r\n            <input\r\n              className=\"input\"\r\n              required\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handle_password}\r\n            />\r\n          </FormGroup>\r\n        </password_form>\r\n\r\n        <password_confirm_form>\r\n          <TextLabel htmlFor=\"password_confirm\">비밀번호 확인</TextLabel>\r\n          <FormGroup>\r\n            <input\r\n              className=\"input\"\r\n              required\r\n              type=\"password\"\r\n              value={passwordConfirm}\r\n              onChange={password_doublecheck}\r\n            />\r\n          </FormGroup>\r\n        </password_confirm_form>\r\n\r\n        <nickname_form>\r\n          <TextLabel htmlFor=\"password\">닉네임</TextLabel>\r\n          <FormGroup>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              required\r\n              value={nickname}\r\n              onChange={(e) => setNickname(e.target.value)}\r\n            />\r\n          </FormGroup>\r\n        </nickname_form>\r\n\r\n        <submitBtn>\r\n          <button className=\"btn\">가입완료</button>\r\n        </submitBtn>\r\n      </RegisterForm>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}